// <auto-generated />
using System;
using Assessment.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assessment.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241005082313_addedReservationPermissionToAdmin")]
    partial class addedReservationPermissionToAdmin
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Assessment.Domain.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatePublished")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Author");

                    b.HasIndex("Name");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Assessment.Domain.Entities.BookReservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpectedDateOfReturn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CustomerId");

                    b.ToTable("BookReservations");
                });

            modelBuilder.Entity("Assessment.Domain.Entities.BookReservationNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsNotified")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BookReservationNotifications");
                });

            modelBuilder.Entity("Assessment.Domain.Entities.Permission", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = (short)1,
                            IsDeleted = false,
                            Name = "AddBook"
                        },
                        new
                        {
                            Id = (short)2,
                            IsDeleted = false,
                            Name = "GetBook"
                        },
                        new
                        {
                            Id = (short)3,
                            IsDeleted = false,
                            Name = "SearchBook"
                        },
                        new
                        {
                            Id = (short)4,
                            IsDeleted = false,
                            Name = "BookReturn"
                        },
                        new
                        {
                            Id = (short)5,
                            IsDeleted = false,
                            Name = "ReservationNotification"
                        },
                        new
                        {
                            Id = (short)6,
                            IsDeleted = false,
                            Name = "BookCollection"
                        },
                        new
                        {
                            Id = (short)7,
                            IsDeleted = false,
                            Name = "ReserveBook"
                        },
                        new
                        {
                            Id = (short)8,
                            IsDeleted = false,
                            Name = "GetReservation"
                        },
                        new
                        {
                            Id = (short)9,
                            IsDeleted = false,
                            Name = "GetAllReservations"
                        },
                        new
                        {
                            Id = (short)10,
                            IsDeleted = false,
                            Name = "GetAllReservationNotifications"
                        },
                        new
                        {
                            Id = (short)11,
                            IsDeleted = false,
                            Name = "GetAllUsers"
                        },
                        new
                        {
                            Id = (short)12,
                            IsDeleted = false,
                            Name = "GetSingleUser"
                        },
                        new
                        {
                            Id = (short)13,
                            IsDeleted = false,
                            Name = "BlockUser"
                        },
                        new
                        {
                            Id = (short)14,
                            IsDeleted = false,
                            Name = "CreateRole"
                        },
                        new
                        {
                            Id = (short)15,
                            IsDeleted = false,
                            Name = "UsersInRole"
                        },
                        new
                        {
                            Id = (short)16,
                            IsDeleted = false,
                            Name = "AddUserToRole"
                        },
                        new
                        {
                            Id = (short)18,
                            IsDeleted = false,
                            Name = "RemoveUserFromRole"
                        },
                        new
                        {
                            Id = (short)17,
                            IsDeleted = false,
                            Name = "ViewAllPermission"
                        },
                        new
                        {
                            Id = (short)19,
                            IsDeleted = false,
                            Name = "ViewAllRoles"
                        },
                        new
                        {
                            Id = (short)20,
                            IsDeleted = false,
                            Name = "RemoveRole"
                        });
                });

            modelBuilder.Entity("Assessment.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 388, DateTimeKind.Utc).AddTicks(75),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 388, DateTimeKind.Utc).AddTicks(76),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 388, DateTimeKind.Utc).AddTicks(78),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 388, DateTimeKind.Utc).AddTicks(78),
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Assessment.Domain.Entities.RolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<short>("PermissionId")
                        .HasColumnType("smallint");

                    b.Property<short>("RoleId")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("RolePermission");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9719),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9719),
                            PermissionId = (short)1,
                            RoleId = (short)1
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9721),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9722),
                            PermissionId = (short)2,
                            RoleId = (short)1
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9723),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9723),
                            PermissionId = (short)3,
                            RoleId = (short)1
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9725),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9725),
                            PermissionId = (short)4,
                            RoleId = (short)1
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9726),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9726),
                            PermissionId = (short)5,
                            RoleId = (short)1
                        },
                        new
                        {
                            Id = 10,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9729),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9729),
                            PermissionId = (short)6,
                            RoleId = (short)1
                        },
                        new
                        {
                            Id = 23,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9730),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9730),
                            PermissionId = (short)8,
                            RoleId = (short)1
                        },
                        new
                        {
                            Id = 11,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9732),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9732),
                            PermissionId = (short)9,
                            RoleId = (short)1
                        },
                        new
                        {
                            Id = 12,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9740),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9740),
                            PermissionId = (short)10,
                            RoleId = (short)1
                        },
                        new
                        {
                            Id = 13,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9742),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9742),
                            PermissionId = (short)11,
                            RoleId = (short)1
                        },
                        new
                        {
                            Id = 14,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9743),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9744),
                            PermissionId = (short)12,
                            RoleId = (short)1
                        },
                        new
                        {
                            Id = 15,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9745),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9745),
                            PermissionId = (short)13,
                            RoleId = (short)1
                        },
                        new
                        {
                            Id = 16,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9746),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9746),
                            PermissionId = (short)14,
                            RoleId = (short)1
                        },
                        new
                        {
                            Id = 17,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9748),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9748),
                            PermissionId = (short)15,
                            RoleId = (short)1
                        },
                        new
                        {
                            Id = 18,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9749),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9749),
                            PermissionId = (short)16,
                            RoleId = (short)1
                        },
                        new
                        {
                            Id = 19,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9750),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9751),
                            PermissionId = (short)17,
                            RoleId = (short)1
                        },
                        new
                        {
                            Id = 20,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9752),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9752),
                            PermissionId = (short)18,
                            RoleId = (short)1
                        },
                        new
                        {
                            Id = 21,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9754),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9755),
                            PermissionId = (short)19,
                            RoleId = (short)1
                        },
                        new
                        {
                            Id = 22,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9756),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9756),
                            PermissionId = (short)20,
                            RoleId = (short)1
                        },
                        new
                        {
                            Id = 6,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9757),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9757),
                            PermissionId = (short)2,
                            RoleId = (short)2
                        },
                        new
                        {
                            Id = 7,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9759),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9759),
                            PermissionId = (short)3,
                            RoleId = (short)2
                        },
                        new
                        {
                            Id = 8,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9760),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9760),
                            PermissionId = (short)7,
                            RoleId = (short)2
                        },
                        new
                        {
                            Id = 9,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9761),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 387, DateTimeKind.Utc).AddTicks(9762),
                            PermissionId = (short)5,
                            RoleId = (short)2
                        });
                });

            modelBuilder.Entity("Assessment.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerType")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoginFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerType");

                    b.HasIndex("Email");

                    b.HasIndex("PhoneNumber");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Assessment.Domain.Entities.UserInRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<short>("RoleId")
                        .HasColumnType("smallint");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserInRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2024, 10, 5, 8, 23, 13, 388, DateTimeKind.Utc).AddTicks(988),
                            IsDeleted = false,
                            LastModified = new DateTime(2024, 10, 5, 8, 23, 13, 388, DateTimeKind.Utc).AddTicks(989),
                            RoleId = (short)1,
                            UserId = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
